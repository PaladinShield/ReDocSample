name: 'CI'

on:
  push:
    branches:
    - main
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: arc-runner-set

    outputs:
      run_id: ${{ steps.set_output.outputs.run_id }}

    steps:
    - 
      name: set output
      id: set_output
      run: |
        echo "run_id=${{github.run_id}}.${{ github.run_attempt }}" >> $GITHUB_ENV
        echo "run_id=${{github.run_id}}.${{ github.run_attempt }}" >> "$GITHUB_OUTPUT"
     
    - uses: actions/checkout@v4

    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3    
    
    - 
      name: Login to private registry
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.REGISTRY_URL }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    
    -
      name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: ./ReDocSample
        file: ./ReDocSample/Dockerfile
        builder: ${{ steps.buildx.outputs.name }}
        push: true
        tags: '${{ vars.REGISTRY_URL }}/k8s/redoc:${{ env.run_id }},${{ vars.REGISTRY_URL }}/k8s/redoc:latest,${{ vars.REGISTRY_URL }}/release/redoc:${{ env.run_id }},${{ vars.REGISTRY_URL }}/release/redoc:latest'

  trigger_azure_pipeline:
    runs-on: arc-runner-set
    needs: build

    steps:
      - name: Trigger Azure DevOps Pipeline
        uses: Azure/pipelines@v1.2
        with:
          azure-devops-project-url: '${{ secrets.AZURE_DEVOPS_PROJECT_URL }}'
          azure-pipeline-name: 'ReDoc-CD'
          azure-devops-token: '${{ secrets.AZURE_DEVOPS_TOKEN }}'
          azure-pipeline-variables: '{"GITHUB_RUN_ID": "${{ github.run_id }}", "GITHUB_RUN_ATTEMPT": "${{ github.run_attempt }}"}'

  create_release:
    runs-on: ubuntu-latest
    needs: trigger_azure_pipeline

    steps:
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
        run: |
          gh release create "${{ needs.build.outputs.run_id }}" \
              --repo="$GITHUB_REPOSITORY" \
              --title="${GITHUB_REPOSITORY#*/} ${{ needs.build.outputs.run_id }}" \
              --generate-notes
