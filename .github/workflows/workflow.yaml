name: 'CI'

on:
  push:
    branches:
    - main
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: arc-runner-set
    
    steps:
    - 
      name: set output
      id: set_output
      run: echo "run_id=${{ github.run_attempt }}" >> $GITHUB_ENV
     
    - uses: actions/checkout@v4

    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3    
    
    - 
      name: Login to private registry
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.REGISTRY_URL }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    
    -
      name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: ./ReDocSample
        file: ./ReDocSample/Dockerfile
        builder: ${{ steps.buildx.outputs.name }}
        push: true
        tags: 'k8s/redoc:${{ env.run_id }},k8s/redoc:latest,release/redoc:${{ env.run_id }},release/redoc:latest'

    #- name: Setup .NET Core
    #  uses: actions/setup-dotnet@v1
    #  with:
    #    dotnet-version: '8.0.x'
    #- name: Dotnet Publish
    #  run: dotnet publish ReDocSample -c Release -o deploy
    # - name: Stop Service
    #   uses: garygrossgarten/github-action-ssh@0.7.0
    #   with:
    #     command: |
    #       sudo systemctl stop redoc.service
    #     host: ${{ secrets.REMOTE_HOST }}
    #     username: ${{ secrets.REMOTE_USER }}
    #     privatekey: ${{ secrets.REMOTE_SSH_KEY }}
    # - name: deploy file
    #   uses: wlixcc/SFTP-Deploy-Action@v1.2.4
    #   with:
    #     username: ${{ secrets.REMOTE_USER }}
    #     server: ${{ secrets.REMOTE_HOST }}
    #     ssh_private_key: ${{ secrets.REMOTE_SSH_KEY }}
    #     local_path: './deploy/*'
    #     remote_path: ${{ secrets.REMOTE_TARGET }}
    #     sftpArgs: '-o ConnectTimeout=5'
    # - name: Restart Nginx and Start Service
    #   uses: garygrossgarten/github-action-ssh@0.7.0
    #   with:
    #     command: |
    #       sudo systemctl nginx -t
    #       sudo systemctl restart nginx
    #       sudo systemctl start redoc.service
    #     host: ${{ secrets.REMOTE_HOST }}
    #     username: ${{ secrets.REMOTE_USER }}
    #     privatekey: ${{ secrets.REMOTE_SSH_KEY }}
